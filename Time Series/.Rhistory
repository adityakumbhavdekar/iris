# Find weight of a person with height 170.
a <- data.frame(x = 170)
result <-  predict(relation,a)
print(result)
png(file = "linearregression.png")
# Plot the chart.
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
# Save the file.
dev.off()
plot(y,x,col="red",main = "Height vs Weight",abline (lm(x~y)),xlab = "weight in kg",ylab="height in cm")
print(head(input))
input <- mtcars[,c("mpg","disp","hp","wt")]
print(head(input))
model<- lm(mpg,.,data=input)
model<- lm(mpg~.,data=input)
summary(model)
summary(model)
cat("# # # # The Coefficient Values # # # ","\n")
a <- coef(model)[1]
print(a)
Xdisp <- coef(model)[2]
Xhp <- coef(model)[3]
Xwt <- coef(model)[4]
print(Xdisp)
print(Xhp)
print(Xwt)
y=37.10551+Xdisp.x1+Xhp.x2+Xwt.x3
y=37.10551+(-0.0009370091)*x1+(-0.03115655)*x2+(-3.800891)*x3
y=37.10551+(-0.0009370091)*221+(-0.03115655)*102+(-3.800891)*2.91
y
mtcars
input <- mtcars[,c("am","cyl","hp","wt")]
print(head(input))
am.data<- glm(am~.,family="binomial")
am.data<- glm(am~.,family="binomial",data=input)
summary(am.data)
input <- mtcars[,c("am","cyl","hp","wt")]
am.data = glm(formula = am ~ cyl + hp + wt, data = input, family = binomial)
print(summary(am.data))
# Create a sequence of numbers between -10 and 10 incrementing by 0.1.
x <- seq(-10, 10, by = .1)
# Choose the mean as 2.5 and standard deviation as 0.5.
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(y)
# Create a sequence of numbers between -10 and 10 incrementing by 0.2.
x <- seq(-10,10,by = .2)
# Choose the mean as 2.5 and standard deviation as 2.
z <- pnorm(x, mean = 2.5, sd = 2)
plot(x)
y <- pnorm(x, mean = 2.5, sd = 2)
plot(x,y)
plot(x,y)
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(x,y)
y <- pnorm(x, mean = 2.5, sd = 2)
plot(x,y)
x <- seq(0, 1, by = 0.02)
# Choose the mean as 2 and standard deviation as 3.
y <- qnorm(x, mean = 2, sd = 1)
plot(x,y)
hist(y, main = "Normal DIstribution")
hist(y, main = "Normal DIstribution",col="blue")
hist(y, main = "Normal DIstribution",col="blue")
lpot(x,y)
plot(x,y)
y <- dbinom(x,50,0.5) #dbinom(x, size, prob)
plot(x,y)
y <- dbinom(x,50,0.5) # Create a sample of 50 numbers which are incremented by 1.
x <- seq(0,50,by = 1)
# Create the binomial distribution.
y <- dbinom(x,50,0.5) #dbinom(x, size, prob)
plot(x,y)
x <- pbinom(26,51,0.5)
print(x)
x <- qbinom(0.25,51,1/2)
x <- qbinom(0.25,51,1/2))
x <- qbinom(0.25,51,1/2)
print(x)
x
x <- rbinom(8,150,.4)
x
library(caret)
library(LogisticDx)
library(car)
input <- warpbreaks
print(head(input))
print(summary(output))
output <-glm(formula = breaks ~ wool+tension,
data = warpbreaks,
family = poisson)
print(summary(output))
input <- mtcars[,c("am","mpg","hp")]
print(head(input))
result <- aov(mpg~hp*am,data = input)
print(summary(result))
input <- mtcars
result <- aov(mpg~hp+am,data = input)
print(summary(result))
result1 <- aov(mpg~hp*am,data = input)
result2 <- aov(mpg~hp+am,data = input)
print(anova(result1,result2))
rainfall <- c(799,1174.8,865.1,1334.6,635.4,918.5,685.5,998.6,784.2,985,882.8,1071)
rainfall.timeseries <- ts(rainfall,start = c(2012,1),frequency = 12)
print(rainfall.timeseries)
plot(rainfall.timeseries)
rainfall1 <- c(799,1174.8,865.1,1334.6,635.4,918.5,685.5,998.6,784.2,985,882.8,1071)
rainfall2 <-
c(655,1306.9,1323.4,1172.2,562.2,824,822.4,1265.5,799.6,1105.6,1106.7,1337.8)
combined.rainfall <-  matrix(c(rainfall1,rainfall2),nrow = 12)
rainfall.timeseries <- ts(combined.rainfall,start = c(2012,1),frequency = 12)
print(rainfall.timeseries)
plot(rainfall.timeseries)
plot(rainfall.timeseries, main = "Multiple Time Series")
model<- HoltWinters(rainfall.timeseries,seasonal = "multiplicative",start.periods = 2013,1, frequency=12)
model<- HoltWinters(rainfall.timeseries,seasonal = "multiplicative",start.periods = 2013,1)
plot(model)
summary(model)
model<- HoltWinters(rainfall.timeseries,seasonal = "multiplicative")
model<- HoltWinters(rainfall.timeseries,h=12)
model<- forecast.HoltWinters(rainfall.timeseries,h=12)
model<- forecast.HoltWinters(rainfall.timeseries,alpha=0.7,beta=0.1,gamma=F)
model<-HoltWinters(rainfall.timeseries,alpha=0.7,beta=0.1,gamma=F)
plot(model)
fit2<-HoltWinters(timedata,alpha=0.7,beta=0.1,gamma=F)
plot(fit2)
library(forecast)
library("forecast", lib.loc="~/R/win-library/3.4")
library("party", lib.loc="~/R/win-library/3.4")
library("party", lib.loc="~/R/win-library/3.4")
setwd(D:/Practice/Logistic Regression/Participant)
setwd("D:/Practice/Logistic Regression/Participant")
read.csv(Analysis_of_Default)
read.csv("Analysis_of_Default")
setwd("D:/Practice/Linear Regression/Participant/R Files")
data<-read.csv( "D:\\Practice\\Linear Regression\\Participant\\R Files\\Linear_Reg_Sample_Data.csv")
file.choose()
data
data
View(data)
str(data)
correlation<-cor(data,data)
correlation
write.csv(correlation)
data1<-data[,-c(1,9)]
data1
view(data1)
correlation1<-cor(data1,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,)
data1=lm(Capped_Losses~.,data1)
data1
vif(data1)
library("rpart", lib.loc="C:/Program Files/R/R-3.4.0/library")
vif(data1)
install.packages("VIF")
VIF(data1)
Vif(data1)
?vif
vif?
?vif
data1=glm(Capped_Losses~.,data1)
data1=glm(Capped_Losses~.,data1,family = binomial(logit))
data1=lm(Capped_Losses~.,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,data1)
data1=lm(Capped_Losses~.,data1)
View(data)
str(data)
correlation<-cor(data,data)
correlation
write.csv(correlation)
data1<-data[,-c(1,9)]
data1
view(data1)
correlation1<-cor(data1,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,data1)
summary(data1)
summary(data1)
library("rpart", lib.loc="C:/Program Files/R/R-3.4.0/library")
library("car", lib.loc="~/R/win-library/3.4")
library("caret", lib.loc="~/R/win-library/3.4")
library("caret", lib.loc="~/R/win-library/3.4")
vif(data1)
data2<-data1[,-c(1,2,3)]
data2<-data1[,-c(1,2,3)]
data2<-data1[,-c(1,2,3)]
data2
data2
data2<-data1[,-c(1,2,3)]
data2<-data1[,-c(1,2,3)]
data2<-data1[,-c(1,2,3)]
data2<-data1[,-(1,2,3)]
data2<-data1[,-(1:3)]
data2<-data1[,-c(1:3)]
data2
data2<-data1[,-c(1:3)]
data2<-data1[,-c(1,2,3)]
names(data1)
names(data1)
summary(data1)
data1
view(data1)
correlation1<-cor(data1,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,data1)
summary(data1)
data1$
data2<-data1[,-c(1:3)]
names(data1)
summary(data1)
data1$Years_Drv_Exp<- NULL
data1$Number_Vehicles<-NULL
data$1Average_Age<- NULL
data$Average_Age<- NULL
data1
vif(data1)
data1[,-c(1,2,3)]->data2
write.csv(data1,"data1.csv")
data.frame->data1
data1[,-c(1,2,3)]->data2
write.csv(data1,"data1.csv")
summary(data1)
data1
view(data1)
correlation1<-cor(data1,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,data1)
summary(data1)
data1$
View(data)
str(data)
correlation<-cor(data,data)
correlation
write.csv(correlation)
data1<-data[,-c(1,9)]
data1
view(data1)
correlation1<-cor(data1,data1)
correlation1
str(data1)
summary(data1)
data1=lm(Capped_Losses~.,data1)
summary(data1)
data1<-data[,-c(1,8)]
data1
view(data1)
data1=lm(Capped_Losses~.,data1)
summary(data1)
names(data1)
summary(data1)->data2
data2
data
names(data)
summary(data1)->data2
data2
names(data)
vif(data2)
names(data2)
vif(data)
library("MASS", lib.loc="C:/Program Files/R/R-3.4.0/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.4.0/library")
vif(data)
vif(data1)
data3<-data[,-3]
names(data3)
data3<-data[,-c(1,3,7)]
names(data3)
fitlinreg<-lm(Capped_Losses~.,data3)
summary(fitlinreg)
library(VIM)
library(car)
library(glmnet)
library(SamplingStrata)
library(sampling)
setwd("D:\Practice\Time Series")
setwd("D:/Practice/Time Series")
sales=read.csv("sales.csv")
View(sales)
sales<- ts(sales[,1],start = 1991,frequency = 12)
sales
hws1<-HoltWinters(sales,aplha=0.2,beta=FALSE,gamma = FALSE)
install.packages("SamplingStrata")
install.packages("SamplingStrata")
install.packages("sampling")
install.packages("VIM")
install.packages("car")
install.packages("glmnet")
install.packages("car")
library(SamplingStrata)
library(sampling)
library(VIM)
library(car)
library(glmnet)
install.packages("memoise")
install.packages("colorspace")
install.packages("data.table")
install.packages("foreach")
install.packages("foreach")
library(SamplingStrata)
library(sampling)
library(VIM)
library(car)
library(glmnet)
install.packages("DEoptimR")
library("MASS", lib.loc="C:/Program Files/R/R-3.4.0/library")
library(SamplingStrata)
library(sampling)
library(VIM)
library(car)
library(glmnet)
hws1<-HoltWinters(sales,aplha=0.2,beta=FALSE,gamma = FALSE)
hws1<-HoltWinters(sales,alpha=0.2,beta=FALSE,gamma = FALSE)
hws1
hws1$fitted
single.exp.model<- hws1$fitted
write.csv(single.exp.model,"single.exp.model")
single.exp.model<-hws2$fitted
hws2<-HoltWinters(sales)
hws2
hws2$fitted
single.exp.model1<-hws2$fitted
write.csv(single.exp.model1,"single.exp.model1")
write.csv(single.exp.model,"single.exp.model.csv")
write.csv(single.exp.model1,"single.exp.model1.csv")
hws3<-HoltWinters(sales,alpha = 0.8,beta=0.8,gamma=FALSE)
hws3
hws3$fitted
double.exp.model=hws3$fitted
write.csv(double.exp.model,"double.exp.model.csv")
plot(hws3$fitted)
hws4=HoltWinters(sales,gamma=FALSE)
hws4
hws4$fitted
hws1$fitted
hws2$fitted
hws4$fitted
double.exp.model2<-hws4$fitted
write.csv(double.exp.model2,"double.exp.model2.csv")
hws4
plot(hws4$fitted)
model.predict<-predict(hws4,n.ahead = 12,prediction.interval = TRUE)
model.predict
hws5<-HoltWinters(sales, alpha=0.8,beta = 0.1,gamma=0.8)
hws5
hws5$fitted
triple.exp.model<-hws5$fitted
write.csv(triple.exp.model,"triple.exp.model.csv")
plot(hws5$fitted)
model.pred<-predict(hws5,n.ahead=12,prediction.interval = TRUE)
model.pred
hws6<-HoltWinters(sales)
hws6
hws6$fitted
triple.exp.model1<-hws6$fitted
write.csv(triple.exp.model1,"triple.exp.model1.csv")
hws6$fitted
model.pred2<-predict(hws6,n.ahead = 12,prediction.interval = TRUE)
model.pred2
summary(model.pred2)
library(forecast)
#Reading data in R
data<-read.csv(file.choose())
#Converting data into time series using ts function
timedata<-ts(data[,2],frequency=12,start=c(1995,1),end=c(2013,2))
head(timedata)
plot(timedata,ylab="Sales of motor", xlab="Years")
#Decomposing time series into components
components<-stl(timedata,s.window="periodic")
plot(components)
#Fitting simple exponential smoothing
fit1<-ses(timedata,alpha=0.6,initial="simple",h=5)
fit1<-ses(timedata,initial="simple",h=5)
plot(fit1)
summary(fit1)
#Fitting Holt's linear trend method
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=5)
plot(fit2)
summary(fit2)
#Fitting Holtwinters seasonal method
fit3<-hw(timedata,seasonal="multiplicative",h=5)
plot(fit3)
summary(fit3)
library(forecast)
#Reading data in R
data<-read.csv(file.choose())
#Converting data into time series using ts function
timedata<-ts(data[,2],frequency=12,start=c(1995,1),end=c(2013,2))
head(timedata)
plot(timedata,ylab="Sales of motor", xlab="Years")
#Decomposing time series into components
components<-stl(timedata,s.window="periodic")
plot(components)
#Fitting simple exponential smoothing
fit1<-ses(timedata,alpha=0.6,initial="simple",h=5)
fit1<-ses(timedata,initial="simple",h=5)
plot(fit1)
summary(fit1)
#Fitting Holt's linear trend method
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=5)
plot(fit2)
summary(fit2)
#Fitting Holtwinters seasonal method
fit3<-hw(timedata,seasonal="multiplicative",h=5)
plot(fit3)
summary(fit3)
timedata<-ts(data[,2],frequency=12,start=c(1995,1),end=c(2013,2))
library(forecast)
#Reading data in R
data<-read.csv(file.choose())
timedata<-ts(data[,2],frequency=12,start=c(1995,1),end=c(2013,2))
head(timedata)
plot(timedata,ylab="Sales of motor", xlab="Years")
components<-stl(timedata,s.window="periodic")
plot(components)
fit1<-ses(timedata,alpha=0.6,initial="simple",h=5)
fit1
fit1<-ses(timedata,initial="simple",h=5)
fit1
plot(fit1)
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=5)
plot(fit2)
summary(fit2)
fit3<-hw(timedata,seasonal="multiplicative",h=5)
plot(fit3)
summary(fit3)
library(forecast)
#Reading data in R
data<-read.csv(file.choose())
View(sales)
View(data)
timedata<-ts(data[,2],frequency=12,start=c(1995,1),end=c(2013,2))
timedata<-ts(data,frequency=12,start=c(1995,1),end=c(2013,2))
head(timedata)
View(data)
timedata<-ts(data,frequency=12,start=c(1995,1),end=c(1997,12))
head(timedata)
plot(timedata,ylab="Sales of motor", xlab="Years")
components<-stl(timedata,s.window="periodic")
plot(components)
fit1<-ses(timedata,alpha=0.6,initial="simple",h=5)
fit1
fit1<-ses(timedata,alpha=0.6,initial="simple",h=12)
fit1
fit1<-ses(timedata,initial="simple",h=5)
fit1
fit1<-ses(timedata,initial="simple",h=12)
fit1
plot(fit1)
summary(fit1)
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=12)
plot(fit2)
summary(fit2)
summary(fit1)
setwd("D:/Practice/Time Series")
summary(fit1)
SES<-summary(fit1)
write.csv(SES,"SES.csv")
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=12)
plot(fit2)
summary(fit2)
HOLT<-summary(fit2)
write.csv(HOLT,"HOLT.csv")
source('~/.active-rstudio-document', echo=TRUE)
fit3<-hw(timedata,seasonal="multiplicative",h=12)
plot(fit3)
summary(fit3)
fit3<-hw(timedata,seasonal="multiplicative",h=12)
plot(fit3)
summary(fit3)
HW<-summary(fit3)
write.csv(HW,"HW.csv")
library(caret)
library(LogisticDx)
library(car)
View(data)
setwd("D:/Practice/Time Series")
library(forecast)
data<-read.csv(file.choose())
View(data)
View(data)
timedata<-ts(data,frequency=12,start=c(1995,1),end=c(1997,12))
head(timedata)
plot(timedata,ylab="Sales of motor", xlab="Years")
components<-stl(timedata,s.window="periodic")
plot(components)
fit1<-ses(timedata,alpha=0.6,initial="simple",h=12)
fit1
fit1<-ses(timedata,initial="simple",h=12)
fit1
plot(fit1)
summary(fit1)
SES<-summary(fit1)
fit2<-holt(timedata,alpha=0.6,beta=0.1,initial="simple",h=12)
plot(fit2)
summary(fit2)
HOLT<-summary(fit2)
fit3<-hw(timedata,seasonal="multiplicative",h=12)
plot(fit3)
summary(fit3)
HW<-summary(fit3)
